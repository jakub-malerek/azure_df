{
	"name": "dataflow8",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "log_csv",
						"type": "DatasetReference"
					},
					"name": "LogCsvSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "logparquet",
						"type": "DatasetReference"
					},
					"name": "LogParquetOutput"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Correlation id} as string,",
				"          {Operation name} as string,",
				"          Status as string,",
				"          {Event category} as string,",
				"          Level as string,",
				"          Time as string,",
				"          Subscription as string,",
				"          {Event initiated by} as string,",
				"          {Resource type} as string,",
				"          {Resource group} as string,",
				"          Resource as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LogCsvSource",
				"LogCsvSource split(startsWith({Resource type}, 'Microsoft.Storage'),",
				"     disjoint: false) ~> split1@(Storage, NotStorage)",
				"split1@Storage sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['log.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Correlation_id = {Correlation id},",
				"          Operation_name = {Operation name},",
				"          Status,",
				"          Event_category = {Event category},",
				"          Level,",
				"          Time,",
				"          Subscription,",
				"          Event_initiated_by = {Event initiated by},",
				"          Resource_type = {Resource type},",
				"          Resource_group = {Resource group},",
				"          Resource",
				"     ),",
				"     partitionBy('hash', 1)) ~> LogParquetOutput"
			]
		}
	}
}